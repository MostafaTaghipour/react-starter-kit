{"ast":null,"code":"var _jsxFileName = \"/Users/mostafataghipour/Desktop/untitled folder/web/src/components/ApplyTheme.jsx\";\nvar __jsx = React.createElement;\n// This code generates correct css custom properties\n// from any color code (no named color yet)\nimport React from \"react\";\nimport identity from \"lodash/identity\";\nimport map from \"lodash/map\";\nimport trim from \"lodash/trim\";\n\nconst printCss = (suffix = \"\", convert = identity) => {\n  return (value, property) => `--${property}${suffix ? \"-\" + suffix : \"\"}: ${convert(value)};`;\n};\n\nconst rgbToHsl = (red, green, blue) => {\n  const r = Number(trim(red)) / 255;\n  const g = Number(trim(green)) / 255;\n  const b = Number(trim(blue)) / 255;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  let h,\n      s,\n      l = (max + min) / 2;\n\n  if (max === min) {\n    h = s = 0; // achromatic\n  } else {\n    const d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n\n      case g:\n        h = (b - r) / d + 2;\n        break;\n\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  h = Math.round(360 * h);\n  s = Math.round(100 * s);\n  l = Math.round(100 * l);\n  return [h, s, l];\n}; // from @josh3736 | https://stackoverflow.com/a/3732187\n\n\nconst colorToHsl = color => {\n  if (color.slice(0, 1) === \"#\") {\n    if (color.length === 4) {\n      const r = parseInt(color.substr(1, 1) + color.substr(1, 1), 16);\n      const g = parseInt(color.substr(2, 1) + color.substr(2, 1), 16);\n      const b = parseInt(color.substr(3, 1) + color.substr(3, 1), 16);\n      return rgbToHsl(r, g, b);\n    } else {\n      const r = parseInt(color.substr(1, 2), 16);\n      const g = parseInt(color.substr(3, 2), 16);\n      const b = parseInt(color.substr(5, 2), 16);\n      return rgbToHsl(r, g, b);\n    }\n  } else if (color.slice(0, 4) === \"rgba\") {\n    const [r, g, b] = color.slice(5, -1).split(\",\");\n    return rgbToHsl(r, g, b).slice(0, 3);\n  } else if (color.slice(0, 3) === \"rgb\") {\n    const [r, g, b] = color.slice(4, -1).split(\",\");\n    return rgbToHsl(r, g, b);\n  } else if (color.slice(0, 4) === \"hsla\") {\n    return color.slice(5, -1).split(\",\").slice(0, 3);\n  } else if (color.slice(0, 3) === \"hsl\") {\n    return color.slice(4, -1).split(\",\");\n  } else {\n    // named color values are not yet supported\n    console.error(\"Named color values are not supported in the config. Convert it manually using this chart: https://htmlcolorcodes.com/color-names/\");\n    return [0, 0, 16]; // defaults to dark gray\n  }\n};\n\nconst ApplyTheme = ({\n  colors\n}) => {\n  if (colors) {\n    return __jsx(\"style\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, \":root {\", colors && map(colors, printCss(\"\", color => {\n      const hsl = colorToHsl(color);\n      return `hsl(${hsl[0]}%, ${hsl[1]}%, ${hsl[2]}%)`;\n    })), colors && map(colors, printCss(\"h\", color => {\n      const hsl = colorToHsl(color);\n      return hsl[0];\n    })), colors && map(colors, printCss(\"s\", color => {\n      const hsl = colorToHsl(color);\n      return `${hsl[1]}%`;\n    })), colors && map(colors, printCss(\"l\", color => {\n      const hsl = colorToHsl(color);\n      return `${hsl[2]}%`;\n    })));\n  } else return null;\n};\n\nexport default ApplyTheme;","map":{"version":3,"sources":["/Users/mostafataghipour/Desktop/untitled folder/web/src/components/ApplyTheme.jsx"],"names":["React","identity","map","trim","printCss","suffix","convert","value","property","rgbToHsl","red","green","blue","r","Number","g","b","max","Math","min","h","s","l","d","round","colorToHsl","color","slice","length","parseInt","substr","split","console","error","ApplyTheme","colors","hsl"],"mappings":"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","sourcesContent":["// This code generates correct css custom properties\n// from any color code (no named color yet)\n\nimport React from \"react\";\nimport identity from \"lodash/identity\";\nimport map from \"lodash/map\";\nimport trim from \"lodash/trim\";\n\nconst printCss = (suffix = \"\", convert = identity) => {\n  return (value, property) =>\n    `--${property}${suffix ? \"-\" + suffix : \"\"}: ${convert(value)};`;\n};\n\nconst rgbToHsl = (red, green, blue) => {\n  const r = Number(trim(red)) / 255;\n  const g = Number(trim(green)) / 255;\n  const b = Number(trim(blue)) / 255;\n\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  let h,\n    s,\n    l = (max + min) / 2;\n\n  if (max === min) {\n    h = s = 0; // achromatic\n  } else {\n    const d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n    h /= 6;\n  }\n\n  h = Math.round(360 * h);\n  s = Math.round(100 * s);\n  l = Math.round(100 * l);\n\n  return [h, s, l];\n};\n\n// from @josh3736 | https://stackoverflow.com/a/3732187\nconst colorToHsl = (color) => {\n  if (color.slice(0, 1) === \"#\") {\n    if (color.length === 4) {\n      const r = parseInt(color.substr(1, 1) + color.substr(1, 1), 16);\n      const g = parseInt(color.substr(2, 1) + color.substr(2, 1), 16);\n      const b = parseInt(color.substr(3, 1) + color.substr(3, 1), 16);\n      return rgbToHsl(r, g, b);\n    } else {\n      const r = parseInt(color.substr(1, 2), 16);\n      const g = parseInt(color.substr(3, 2), 16);\n      const b = parseInt(color.substr(5, 2), 16);\n      return rgbToHsl(r, g, b);\n    }\n  } else if (color.slice(0, 4) === \"rgba\") {\n    const [r, g, b] = color.slice(5, -1).split(\",\");\n    return rgbToHsl(r, g, b).slice(0, 3);\n  } else if (color.slice(0, 3) === \"rgb\") {\n    const [r, g, b] = color.slice(4, -1).split(\",\");\n    return rgbToHsl(r, g, b);\n  } else if (color.slice(0, 4) === \"hsla\") {\n    return color.slice(5, -1).split(\",\").slice(0, 3);\n  } else if (color.slice(0, 3) === \"hsl\") {\n    return color.slice(4, -1).split(\",\");\n  } else {\n    // named color values are not yet supported\n    console.error(\n      \"Named color values are not supported in the config. Convert it manually using this chart: https://htmlcolorcodes.com/color-names/\"\n    );\n    return [0, 0, 16]; // defaults to dark gray\n  }\n};\n\nconst ApplyTheme = ({ colors }) => {\n  if (colors) {\n    return (\n      <style>\n        {\":root {\"}\n        {colors &&\n          map(\n            colors,\n            printCss(\"\", (color) => {\n              const hsl = colorToHsl(color);\n              return `hsl(${hsl[0]}%, ${hsl[1]}%, ${hsl[2]}%)`;\n            })\n          )}\n        {colors &&\n          map(\n            colors,\n            printCss(\"h\", (color) => {\n              const hsl = colorToHsl(color);\n              return hsl[0];\n            })\n          )}\n        {colors &&\n          map(\n            colors,\n            printCss(\"s\", (color) => {\n              const hsl = colorToHsl(color);\n              return `${hsl[1]}%`;\n            })\n          )}\n        {colors &&\n          map(\n            colors,\n            printCss(\"l\", (color) => {\n              const hsl = colorToHsl(color);\n              return `${hsl[2]}%`;\n            })\n          )}\n      </style>\n    );\n  } else return null;\n};\n\nexport default ApplyTheme;\n"]},"metadata":{},"sourceType":"module"}