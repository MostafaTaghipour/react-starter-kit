{"ast":null,"code":"var _jsxFileName = \"/Users/mostafataghipour/Desktop/untitled folder/web/src/Providers/SmplaeProvider.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nexport const SmapleContext = /*#__PURE__*/React.createContext({\n  val: \"\",\n  setVal: v => {}\n});\nexport const SmapleProvider = ({\n  children\n}) => {\n  const {\n    0: _val,\n    1: set_val\n  } = useState(\"\");\n  const smapleContext = React.useMemo(() => ({\n    val: _val,\n    setVal: v => {\n      if (_val == v) return;\n      set_val(v);\n      console.log(\"hello\");\n    }\n  }), [_val]);\n  return __jsx(SmapleContext.Provider, {\n    value: smapleContext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"sources":["/Users/mostafataghipour/Desktop/untitled folder/web/src/Providers/SmplaeProvider.tsx"],"names":["React","useState","SmapleContext","createContext","val","setVal","v","SmapleProvider","children","_val","set_val","smapleContext","useMemo","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,MAAMC,aAAa,gBAAGF,KAAK,CAACG,aAAN,CAG1B;AACDC,EAAAA,GAAG,EAAE,EADJ;AAEDC,EAAAA,MAAM,EAAGC,CAAD,IAAe,CAAE;AAFxB,CAH0B,CAAtB;AAQP,OAAO,MAAMC,cAA4B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC5D,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBT,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMU,aAAa,GAAGX,KAAK,CAACY,OAAN,CACpB,OAAO;AACLR,IAAAA,GAAG,EAAEK,IADA;AAELJ,IAAAA,MAAM,EAAGC,CAAD,IAAe;AACrB,UAAIG,IAAI,IAAIH,CAAZ,EAAe;AACfI,MAAAA,OAAO,CAACJ,CAAD,CAAP;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;AANI,GAAP,CADoB,EASpB,CAACL,IAAD,CAToB,CAAtB;AAYA,SACE,MAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAEE,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,QADH,CADF;AAKD,CApBM","sourcesContent":["import React, { useState } from \"react\";\n\nexport const SmapleContext = React.createContext<{\n  val: string;\n  setVal: (v: string) => any;\n}>({\n  val: \"\",\n  setVal: (v: string) => {},\n});\n\nexport const SmapleProvider: React.FC<{}> = ({ children }) => {\n  const [_val, set_val] = useState(\"\");\n\n  const smapleContext = React.useMemo(\n    () => ({\n      val: _val,\n      setVal: (v: string) => {\n        if (_val == v) return;\n        set_val(v);\n        console.log(\"hello\");\n      },\n    }),\n    [_val]\n  );\n\n  return (\n    <SmapleContext.Provider value={smapleContext}>\n      {children}\n    </SmapleContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}