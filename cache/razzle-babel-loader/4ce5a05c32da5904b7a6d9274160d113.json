{"ast":null,"code":"var _jsxFileName = \"/Users/mostafataghipour/Desktop/untitled folder/web/src/Providers/ThemeProvider.tsx\",\n    _this = this;\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nexport var ThemeContext = /*#__PURE__*/React.createContext({\n  currentTheme: \"\",\n  setTheme: function setTheme(newTheme) {}\n});\nexport var ThemeProvider = function ThemeProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(\"\"),\n      _val = _useState[0],\n      set_val = _useState[1];\n\n  var _context = React.useMemo(function () {\n    return {\n      currentTheme: _val,\n      setTheme: function setTheme(newTheme) {\n        if (_val == newTheme) return;\n        set_val(newTheme);\n      }\n    };\n  }, [_val]);\n\n  return __jsx(ThemeContext.Provider, {\n    value: _context,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"sources":["/Users/mostafataghipour/Desktop/untitled folder/web/src/Providers/ThemeProvider.tsx"],"names":["React","useState","ThemeContext","createContext","currentTheme","setTheme","newTheme","ThemeProvider","children","_val","set_val","_context","useMemo"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,IAAMC,YAAY,gBAAGF,KAAK,CAACG,aAAN,CAGzB;AACDC,EAAAA,YAAY,EAAE,EADb;AAEDC,EAAAA,QAAQ,EAAE,kBAACC,QAAD,EAAsB,CAAE;AAFjC,CAHyB,CAArB;AAQP,OAAO,IAAMC,aAA2B,GAAG,SAA9BA,aAA8B,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAC3D,kBAAwBP,QAAQ,CAAC,EAAD,CAAhC;AAAA,MAAOQ,IAAP;AAAA,MAAaC,OAAb;;AAEA,MAAMC,QAAQ,GAAGX,KAAK,CAACY,OAAN,CACf;AAAA,WAAO;AACLR,MAAAA,YAAY,EAAEK,IADT;AAELJ,MAAAA,QAAQ,EAAE,kBAACC,QAAD,EAAsB;AAC9B,YAAIG,IAAI,IAAIH,QAAZ,EAAsB;AACtBI,QAAAA,OAAO,CAACJ,QAAD,CAAP;AACD;AALI,KAAP;AAAA,GADe,EAQf,CAACG,IAAD,CARe,CAAjB;;AAWA,SACE,MAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEE,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCH,QAAzC,CADF;AAGD,CAjBM","sourcesContent":["import React, { useState } from \"react\";\n\nexport const ThemeContext = React.createContext<{\n  currentTheme: string;\n  setTheme: (newTheme: string) => any;\n}>({\n  currentTheme: \"\",\n  setTheme: (newTheme: string) => {},\n});\n\nexport const ThemeProvider: React.FC<{}> = ({ children }) => {\n  const [_val, set_val] = useState(\"\");\n\n  const _context = React.useMemo(\n    () => ({\n      currentTheme: _val,\n      setTheme: (newTheme: string) => {\n        if (_val == newTheme) return;\n        set_val(newTheme);\n      },\n    }),\n    [_val]\n  );\n\n  return (\n    <ThemeContext.Provider value={_context}>{children}</ThemeContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}