{"ast":null,"code":"import messages_fa from \"@app/Assets/locales/fa.json\";\nimport messages_en from \"@app/Assets/locales/en.json\";\nimport \"@formatjs/intl-numberformat/polyfill-force\";\nimport \"@formatjs/intl-numberformat/locale-data/fa\";\nimport \"@formatjs/intl-numberformat/locale-data/en\";\nimport \"@formatjs/intl-datetimeformat/polyfill-force\";\nimport \"@formatjs/intl-datetimeformat/locale-data/fa\";\nimport \"@formatjs/intl-datetimeformat/locale-data/en\";\nvar messages = {\n  fa: messages_fa,\n  en: messages_en\n};\nexport var defaultLang = \"fa\";\nexport var supportedLangs = {\n  en: \"English\",\n  fa: \"Persian\"\n};\nexport function determineUserLang(acceptedLangs) {\n  var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n  // check url for /en/foo where en is a supported language code\n  if (path !== null) {\n    var urlLang = path.trim().split(\"/\")[1];\n    var matchingUrlLang = findFirstSupported([stripCountry(urlLang)]);\n\n    if (matchingUrlLang) {\n      return matchingUrlLang;\n    }\n  } // check browser-set accepted langs\n\n\n  var matchingAcceptedLang = undefined; // findFirstSupported(acceptedLangs.map(stripCountry));\n\n  return matchingAcceptedLang || defaultLang;\n}\nexport function dir(lang) {\n  return lang === \"fa\" ? \"rtl\" : \"ltr\";\n}\n\nfunction findFirstSupported(langs) {\n  var supported = Object.keys(supportedLangs);\n  return langs.find(function (code) {\n    return supported.includes(code);\n  });\n}\n\nfunction stripCountry(lang) {\n  return lang.trim().replace(\"_\", \"-\").split(\"-\")[0];\n}\n\nexport function getMessages(lang) {\n  return messages[lang];\n}","map":{"version":3,"sources":["/Users/mostafataghipour/Desktop/Me/Projects/MyWeb/src/helpers/i18n.ts"],"names":["messages_fa","messages_en","messages","fa","en","defaultLang","supportedLangs","determineUserLang","acceptedLangs","path","urlLang","trim","split","matchingUrlLang","findFirstSupported","stripCountry","matchingAcceptedLang","undefined","dir","lang","langs","supported","Object","keys","find","code","includes","replace","getMessages"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,6BAAxB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAO,4CAAP;AACA,OAAO,4CAAP;AACA,OAAO,4CAAP;AACA,OAAO,8CAAP;AACA,OAAO,8CAAP;AACA,OAAO,8CAAP;AAGA,IAAMC,QAAQ,GAAG;AACfC,EAAAA,EAAE,EAAEH,WADW;AAEfI,EAAAA,EAAE,EAAEH;AAFW,CAAjB;AAKA,OAAO,IAAMI,WAAW,GAAG,IAApB;AAEP,OAAO,IAAMC,cAAc,GAAG;AAC5BF,EAAAA,EAAE,EAAE,SADwB;AAE5BD,EAAAA,EAAE,EAAE;AAFwB,CAAvB;AAKP,OAAO,SAASI,iBAAT,CAA2BC,aAA3B,EAAuD;AAAA,MAAbC,IAAa,uEAAN,IAAM;;AAC5D;AACA,MAAIA,IAAI,KAAK,IAAb,EAAmB;AACjB,QAAMC,OAAO,GAAGD,IAAI,CAACE,IAAL,GAAYC,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,CAAhB;AAEA,QAAMC,eAAe,GAAGC,kBAAkB,CAAC,CAACC,YAAY,CAACL,OAAD,CAAb,CAAD,CAA1C;;AAEA,QAAIG,eAAJ,EAAqB;AACnB,aAAOA,eAAP;AACD;AACF,GAV2D,CAY5D;;;AACA,MAAMG,oBAAoB,GAAGC,SAA7B,CAb4D,CAapB;;AAExC,SAAOD,oBAAoB,IAAIX,WAA/B;AACD;AAED,OAAO,SAASa,GAAT,CAAaC,IAAb,EAAmB;AACxB,SAAOA,IAAI,KAAK,IAAT,GAAgB,KAAhB,GAAwB,KAA/B;AACD;;AAED,SAASL,kBAAT,CAA4BM,KAA5B,EAAmC;AACjC,MAAMC,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYjB,cAAZ,CAAlB;AAEA,SAAOc,KAAK,CAACI,IAAN,CAAW,UAACC,IAAD;AAAA,WAAUJ,SAAS,CAACK,QAAV,CAAmBD,IAAnB,CAAV;AAAA,GAAX,CAAP;AACD;;AAED,SAASV,YAAT,CAAsBI,IAAtB,EAA4B;AAC1B,SAAOA,IAAI,CAACR,IAAL,GAAYgB,OAAZ,CAAoB,GAApB,EAAyB,GAAzB,EAA8Bf,KAA9B,CAAoC,GAApC,EAAyC,CAAzC,CAAP;AACD;;AAED,OAAO,SAASgB,WAAT,CAAqBT,IAArB,EAAmC;AACxC,SAAOjB,QAAQ,CAACiB,IAAD,CAAf;AACD","sourcesContent":["import messages_fa from \"@app/Assets/locales/fa.json\";\nimport messages_en from \"@app/Assets/locales/en.json\";\nimport \"@formatjs/intl-numberformat/polyfill-force\";\nimport \"@formatjs/intl-numberformat/locale-data/fa\";\nimport \"@formatjs/intl-numberformat/locale-data/en\";\nimport \"@formatjs/intl-datetimeformat/polyfill-force\";\nimport \"@formatjs/intl-datetimeformat/locale-data/fa\";\nimport \"@formatjs/intl-datetimeformat/locale-data/en\";\n\n\nconst messages = {\n  fa: messages_fa,\n  en: messages_en,\n};\n\nexport const defaultLang = \"fa\";\n\nexport const supportedLangs = {\n  en: \"English\",\n  fa: \"Persian\",\n};\n\nexport function determineUserLang(acceptedLangs, path = null) {\n  // check url for /en/foo where en is a supported language code\n  if (path !== null) {\n    const urlLang = path.trim().split(\"/\")[1];\n\n    const matchingUrlLang = findFirstSupported([stripCountry(urlLang)]);\n\n    if (matchingUrlLang) {\n      return matchingUrlLang;\n    }\n  }\n\n  // check browser-set accepted langs\n  const matchingAcceptedLang = undefined; // findFirstSupported(acceptedLangs.map(stripCountry));\n\n  return matchingAcceptedLang || defaultLang;\n}\n\nexport function dir(lang) {\n  return lang === \"fa\" ? \"rtl\" : \"ltr\";\n}\n\nfunction findFirstSupported(langs) {\n  const supported = Object.keys(supportedLangs);\n\n  return langs.find((code) => supported.includes(code));\n}\n\nfunction stripCountry(lang) {\n  return lang.trim().replace(\"_\", \"-\").split(\"-\")[0];\n}\n\nexport function getMessages(lang: string) {\n  return messages[lang];\n}\n"]},"metadata":{},"sourceType":"module"}