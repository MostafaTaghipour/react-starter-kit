{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { renderToString } from \"react-dom/server\";\nimport Helmet from \"react-helmet\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport AppContainer from \"@app/AppContainer\";\nimport { determineUserLang } from \"./i18n\"; // acceptLanguage.languages([\"fa\", \"en\"]);\n// We'll be in the /build dir when this runs, so we find the template\n// file relative to /build.\n\nconst htmlTemplateFilename = path.resolve(__dirname, \"..\", \"temp\", \"index.html\");\nlet assets;\n\nconst syncLoadAssets = () => {\n  assets = require(process.env.RAZZLE_ASSETS_MANIFEST);\n};\n\nsyncLoadAssets();\n\nconst cssLinksFromAssets = (assets, entrypoint) => {\n  return assets[entrypoint] ? assets[entrypoint].css ? assets[entrypoint].css.map(asset => `<link rel=\"stylesheet\" href=\"${asset}\">`).join(\"\") : \"\" : \"\";\n};\n\nconst jsScriptTagsFromAssets = (assets, entrypoint, extra = \"\") => {\n  return assets[entrypoint] ? assets[entrypoint].js ? assets[entrypoint].js.map(asset => `<script src=\"${asset}\"${extra}></script>`).join(\"\") : \"\" : \"\";\n}; // const detectLocale = (req: express.Request) => {\n//   const cookieLocale = req.cookies.locale;\n//   return (\n//     acceptLanguage.get(cookieLocale || req.headers[\"accept-language\"]) || \"fa\"\n//   );\n// };\n\n\nexport const renderApp = req => {\n  const context = {}; // const locale = detectLocale(req);\n\n  const lang = determineUserLang(req.acceptsLanguages(), req.path);\n  const markup = renderToString(__jsx(AppContainer, {\n    req: req,\n    context: context,\n    locale: lang\n  }));\n\n  if (context.url) {\n    return {\n      redirect: context.url,\n      lang\n    };\n  } else {\n    let html = fs.readFileSync(htmlTemplateFilename, \"utf8\");\n    const css = cssLinksFromAssets(assets, \"client\");\n    const js = `\n    ${jsScriptTagsFromAssets(assets, \"client\", \" defer crossorigin\")}`;\n    const helmet = Helmet.renderStatic();\n    html = html.replace(\"helmetHtmlAttributes\", helmet.htmlAttributes.toString());\n    html = html.replace(\"helmetBodyAttributes\", helmet.bodyAttributes.toString());\n    html = html.replace(`<link rel=\"icon\" href=\"<%= process.env.PUBLIC_PATH %>favicon.ico\" />`, \"\");\n    html = html.replace(\"<!-- HelmetTitle -->\", helmet.title.toString());\n    html = html.replace(\"<!-- HelmetMeta -->\", helmet.meta.toString());\n    html = html.replace(\"<!-- HelmetLink -->\", helmet.link.toString());\n    html = html.replace(\"<%= htmlWebpackPlugin.tags.headTags %>\", css);\n    html = html.replace(\"<%= htmlWebpackPlugin.tags.bodyTags %>\", js);\n    html = html.replace(\"<!-- AppContent -->\", markup);\n    return {\n      html,\n      lang\n    };\n  }\n};","map":{"version":3,"sources":["/Users/mostafataghipour/Desktop/untitled folder/web/src/helpers/renderApp.tsx"],"names":["React","renderToString","Helmet","fs","path","AppContainer","determineUserLang","htmlTemplateFilename","resolve","__dirname","assets","syncLoadAssets","require","process","env","RAZZLE_ASSETS_MANIFEST","cssLinksFromAssets","entrypoint","css","map","asset","join","jsScriptTagsFromAssets","extra","js","renderApp","req","context","lang","acceptsLanguages","markup","url","redirect","html","readFileSync","helmet","renderStatic","replace","htmlAttributes","toString","bodyAttributes","title","meta","link"],"mappings":"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","sourcesContent":["import express from \"express\";\nimport React from \"react\";\nimport { renderToString } from \"react-dom/server\";\nimport Helmet from \"react-helmet\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport acceptLanguage from \"accept-language\";\nimport AppContainer from \"@app/AppContainer\";\nimport serialize from \"serialize-javascript\";\nimport { determineUserLang } from \"./i18n\";\n\n// acceptLanguage.languages([\"fa\", \"en\"]);\n\n// We'll be in the /build dir when this runs, so we find the template\n// file relative to /build.\nconst htmlTemplateFilename = path.resolve(\n  __dirname,\n  \"..\",\n  \"temp\",\n  \"index.html\"\n);\n\nlet assets: any;\n\nconst syncLoadAssets = () => {\n  assets = require(process.env.RAZZLE_ASSETS_MANIFEST!);\n};\nsyncLoadAssets();\n\nconst cssLinksFromAssets = (assets, entrypoint) => {\n  return assets[entrypoint]\n    ? assets[entrypoint].css\n      ? assets[entrypoint].css\n          .map((asset) => `<link rel=\"stylesheet\" href=\"${asset}\">`)\n          .join(\"\")\n      : \"\"\n    : \"\";\n};\n\nconst jsScriptTagsFromAssets = (assets, entrypoint, extra = \"\") => {\n  return assets[entrypoint]\n    ? assets[entrypoint].js\n      ? assets[entrypoint].js\n          .map((asset) => `<script src=\"${asset}\"${extra}></script>`)\n          .join(\"\")\n      : \"\"\n    : \"\";\n};\n\n// const detectLocale = (req: express.Request) => {\n//   const cookieLocale = req.cookies.locale;\n\n//   return (\n//     acceptLanguage.get(cookieLocale || req.headers[\"accept-language\"]) || \"fa\"\n//   );\n// };\n\nexport const renderApp = (req: express.Request) => {\n  const context: any = {};\n\n  // const locale = detectLocale(req);\n  const lang = determineUserLang(req.acceptsLanguages(), req.path);\n\n  const markup = renderToString(\n    <AppContainer req={req} context={context} locale={lang} />\n  );\n\n  if (context.url) {\n    return { redirect: context.url, lang };\n  } else {\n    let html = fs.readFileSync(htmlTemplateFilename, \"utf8\");\n    const css = cssLinksFromAssets(assets, \"client\");\n\n    const js = `\n    ${jsScriptTagsFromAssets(assets, \"client\", \" defer crossorigin\")}`;\n\n    const helmet = Helmet.renderStatic();\n\n    html = html.replace(\n      \"helmetHtmlAttributes\",\n      helmet.htmlAttributes.toString()\n    );\n    html = html.replace(\n      \"helmetBodyAttributes\",\n      helmet.bodyAttributes.toString()\n    );\n    html = html.replace(\n      `<link rel=\"icon\" href=\"<%= process.env.PUBLIC_PATH %>favicon.ico\" />`,\n      \"\"\n    );\n    html = html.replace(\"<!-- HelmetTitle -->\", helmet.title.toString());\n    html = html.replace(\"<!-- HelmetMeta -->\", helmet.meta.toString());\n    html = html.replace(\"<!-- HelmetLink -->\", helmet.link.toString());\n    html = html.replace(\"<%= htmlWebpackPlugin.tags.headTags %>\", css);\n    html = html.replace(\"<%= htmlWebpackPlugin.tags.bodyTags %>\", js);\n    html = html.replace(\"<!-- AppContent -->\", markup);\n\n    return { html, lang };\n  }\n};\n"]},"metadata":{},"sourceType":"module"}