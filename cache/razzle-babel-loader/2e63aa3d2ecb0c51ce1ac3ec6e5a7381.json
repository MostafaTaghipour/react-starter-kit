{"ast":null,"code":"var _jsxFileName = \"/Users/mostafataghipour/Desktop/untitled folder/web/src/AppContainer.tsx\",\n    _this = this;\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { BrowserRouter, StaticRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport { defaultLang, getMessages } from \"./helpers/i18n\";\nimport { IntlProvider } from \"react-intl\";\nimport { Context as ResponsiveContext } from \"react-responsive\";\nimport { ThemeProvider } from \"react-bootstrap\";\nimport { SmapleProvider } from \"./Providers/SmplaeProvider\";\n\nvar AppContainer = function AppContainer(props) {\n  var context = props.context,\n      req = props.req,\n      locale = props.locale;\n  var isServer = req && context;\n  var localeBaseUrl = locale == defaultLang ? \"/\" : \"/\".concat(locale);\n\n  var renderContent = function renderContent() {\n    return __jsx(ThemeProvider, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, __jsx(IntlProvider, {\n      locale: locale,\n      messages: getMessages(locale),\n      defaultLocale: defaultLang,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, __jsx(SmapleProvider, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, __jsx(ResponsiveContext.Provider, {\n      value: {},\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, __jsx(App, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }\n    })))));\n  };\n\n  return isServer ? __jsx(StaticRouter, {\n    context: context,\n    location: req.url,\n    basename: localeBaseUrl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, renderContent()) : __jsx(BrowserRouter, {\n    basename: localeBaseUrl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, renderContent());\n};\n\nexport default AppContainer;","map":{"version":3,"sources":["/Users/mostafataghipour/Desktop/untitled folder/web/src/AppContainer.tsx"],"names":["React","BrowserRouter","StaticRouter","App","defaultLang","getMessages","IntlProvider","Context","ResponsiveContext","ThemeProvider","SmapleProvider","AppContainer","props","context","req","locale","isServer","localeBaseUrl","renderContent","url"],"mappings":";;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,kBAA5C;AAEA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,gBAAzC;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,SAASC,OAAO,IAAIC,iBAApB,QAA6C,kBAA7C;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,cAAT,QAA+B,4BAA/B;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAIf;AACJ,MAAQC,OAAR,GAAiCD,KAAjC,CAAQC,OAAR;AAAA,MAAiBC,GAAjB,GAAiCF,KAAjC,CAAiBE,GAAjB;AAAA,MAAsBC,MAAtB,GAAiCH,KAAjC,CAAsBG,MAAtB;AACA,MAAMC,QAAQ,GAAGF,GAAG,IAAID,OAAxB;AACA,MAAMI,aAAa,GAAGF,MAAM,IAAIX,WAAV,GAAwB,GAAxB,cAAkCW,MAAlC,CAAtB;;AAEA,MAAMG,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,WACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,YAAD;AACE,MAAA,MAAM,EAAEH,MADV;AAEE,MAAA,QAAQ,EAAEV,WAAW,CAACU,MAAD,CAFvB;AAGE,MAAA,aAAa,EAAEX,WAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,iBAAD,CAAmB,QAAnB;AAA4B,MAAA,KAAK,EAAE,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CALF,CADF,CADF;AAeD,GAhBD;;AAkBA,SAAOY,QAAQ,GACb,MAAC,YAAD;AAAc,IAAA,OAAO,EAAEH,OAAvB;AAAgC,IAAA,QAAQ,EAAEC,GAAG,CAACK,GAA9C;AAAmD,IAAA,QAAQ,EAAEF,aAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,aAAa,EADhB,CADa,GAKb,MAAC,aAAD;AAAe,IAAA,QAAQ,EAAED,aAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCC,aAAa,EAAtD,CALF;AAOD,CAlCD;;AAoCA,eAAeP,YAAf","sourcesContent":["import express from \"express\";\nimport React from \"react\";\nimport { BrowserRouter, StaticRouter } from \"react-router-dom\";\nimport { StaticRouterContext } from \"react-router\";\nimport App from \"./App\";\nimport { defaultLang, getMessages } from \"./helpers/i18n\";\nimport { IntlProvider } from \"react-intl\";\nimport { Context as ResponsiveContext } from \"react-responsive\";\nimport { ThemeProvider } from \"react-bootstrap\";\nimport { SmapleProvider } from \"./Providers/SmplaeProvider\";\n\nconst AppContainer = (props: {\n  req?: express.Request;\n  context?: StaticRouterContext;\n  locale: string;\n}) => {\n  const { context, req, locale } = props;\n  const isServer = req && context;\n  const localeBaseUrl = locale == defaultLang ? \"/\" : `/${locale}`;\n\n  const renderContent = () => {\n    return (\n      <ThemeProvider>\n        <IntlProvider\n          locale={locale}\n          messages={getMessages(locale)}\n          defaultLocale={defaultLang}\n        >\n          <SmapleProvider>\n            <ResponsiveContext.Provider value={{}}>\n              <App />\n            </ResponsiveContext.Provider>\n          </SmapleProvider>\n        </IntlProvider>\n      </ThemeProvider>\n    );\n  };\n\n  return isServer ? (\n    <StaticRouter context={context} location={req.url} basename={localeBaseUrl}>\n      {renderContent()}\n    </StaticRouter>\n  ) : (\n    <BrowserRouter basename={localeBaseUrl}>{renderContent()}</BrowserRouter>\n  );\n};\n\nexport default AppContainer;\n"]},"metadata":{},"sourceType":"module"}