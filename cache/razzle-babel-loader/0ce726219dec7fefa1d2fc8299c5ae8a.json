{"ast":null,"code":"var _jsxFileName = \"/Users/mostafataghipour/Desktop/untitled folder/web/src/components/Custom/Header/Header.tsx\";\nvar __jsx = React.createElement;\nimport Link from \"@app/components/Link\";\nimport { defaultLang, supportedLangs } from \"@app/helpers/i18n\";\nimport useAppLocale from \"@app/hooks/useAppLocale\";\nimport React from \"react\";\nimport { Navbar, Nav, NavDropdown, Container, Form, FormControl, Button } from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport DarkModeToggle from \"react-dark-mode-toggle\";\nimport styles from \"./Header.module.scss\";\nimport useAppTheme from \"@app/hooks/useAppTheme\";\nexport const Header = () => {\n  const {\n    t,\n    locale: lang\n  } = useAppLocale();\n  const {\n    isDark,\n    switchTheme\n  } = useAppTheme();\n  return __jsx(\"header\", {\n    className: \"sticky-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, __jsx(Navbar, {\n    bg: \"primary\",\n    variant: \"dark\",\n    expand: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, __jsx(Container, {\n    className: \"py-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, __jsx(Navbar.Brand, {\n    className: \"ms-0 me-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, t(\"site_title\"))), __jsx(Navbar.Toggle, {\n    \"aria-controls\": \"basic-navbar-nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }), __jsx(Navbar.Collapse, {\n    id: \"basic-navbar-nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, __jsx(Nav, {\n    className: \"me-auto  mb-2 mb-lg-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, __jsx(NavLink, {\n    to: \"/\",\n    className: \"nav-link\",\n    hrefLang: lang,\n    exact: true,\n    activeClassName: \"active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }, \"Home\"), __jsx(NavLink, {\n    to: \"/about\",\n    hrefLang: lang,\n    className: \"nav-link\",\n    activeClassName: \"active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }, \"About\"), __jsx(NavDropdown, {\n    title: \"Dropdown\",\n    id: \"basic-nav-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, __jsx(NavDropdown.Item, {\n    href: \"#action/3.1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, \"Action\"), __jsx(NavDropdown.Item, {\n    href: \"#action/3.2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"Another action\"), __jsx(NavDropdown.Item, {\n    href: \"#action/3.3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"Something\"), __jsx(NavDropdown.Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }), __jsx(NavDropdown.Item, {\n    href: \"#action/3.4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, \"Separated link\"))), __jsx(Form, {\n    inline: true,\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, __jsx(FormControl, {\n    type: \"text\",\n    placeholder: \"Search\",\n    className: `me-2 ${styles.searchInput}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }), __jsx(Button, {\n    variant: \"outline-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, \"Search\")), __jsx(Nav, {\n    className: `ms-3 mb-2 mb-md-0 ${styles.langs}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, Object.keys(supportedLangs).map(code => __jsx(\"a\", {\n    key: code,\n    hrefLang: code,\n    href: `/${code == defaultLang ? \"\" : code}`,\n    className: `nav-link ${code === lang ? \"active\" : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, code.toUpperCase()))), __jsx(DarkModeToggle, {\n    size: 80,\n    className: styles.themeToggle,\n    checked: isDark,\n    onChange: isChecked => setTimeout(() => {\n      switchTheme(isChecked ? \"dark\" : \"light\");\n    }, 500),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  })))));\n};","map":{"version":3,"sources":["/Users/mostafataghipour/Desktop/untitled folder/web/src/components/Custom/Header/Header.tsx"],"names":["Link","defaultLang","supportedLangs","useAppLocale","React","Navbar","Nav","NavDropdown","Container","Form","FormControl","Button","NavLink","DarkModeToggle","styles","useAppTheme","Header","t","locale","lang","isDark","switchTheme","searchInput","langs","Object","keys","map","code","toUpperCase","themeToggle","isChecked","setTimeout"],"mappings":"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","sourcesContent":["import Link from \"@app/components/Link\";\nimport { defaultLang, supportedLangs } from \"@app/helpers/i18n\";\nimport useAppLocale from \"@app/hooks/useAppLocale\";\nimport React from \"react\";\nimport {\n  Navbar,\n  Nav,\n  NavDropdown,\n  Container,\n  Form,\n  FormControl,\n  Button,\n} from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport DarkModeToggle from \"react-dark-mode-toggle\";\nimport styles from \"./Header.module.scss\";\nimport useAppTheme from \"@app/hooks/useAppTheme\";\n\nexport const Header = () => {\n  const { t, locale: lang } = useAppLocale();\n  const { isDark, switchTheme } = useAppTheme();\n  return (\n    <header className=\"sticky-top\">\n      <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\">\n        <Container className=\"py-2\">\n          <Link to=\"/\">\n            <Navbar.Brand className=\"ms-0 me-2\">{t(\"site_title\")}</Navbar.Brand>\n          </Link>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto  mb-2 mb-lg-0\">\n              <NavLink\n                to=\"/\"\n                className=\"nav-link\"\n                hrefLang={lang}\n                exact={true}\n                activeClassName=\"active\"\n              >\n                Home\n              </NavLink>\n              <NavLink\n                to=\"/about\"\n                hrefLang={lang}\n                className=\"nav-link\"\n                activeClassName=\"active\"\n              >\n                About\n              </NavLink>\n              <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.2\">\n                  Another action\n                </NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.3\">\n                  Something\n                </NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item href=\"#action/3.4\">\n                  Separated link\n                </NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n            <Form inline className=\"d-flex\">\n              <FormControl\n                type=\"text\"\n                placeholder=\"Search\"\n                className={`me-2 ${styles.searchInput}`}\n              />\n              <Button variant=\"outline-light\">Search</Button>\n            </Form>\n            <Nav className={`ms-3 mb-2 mb-md-0 ${styles.langs}`}>\n              {Object.keys(supportedLangs).map((code) => (\n                <a\n                  key={code}\n                  hrefLang={code}\n                  href={`/${code == defaultLang ? \"\" : code}`}\n                  className={`nav-link ${code === lang ? \"active\" : \"\"}`}\n                >\n                  {code.toUpperCase()}\n                </a>\n              ))}\n            </Nav>\n\n            <DarkModeToggle\n              size={80}\n              className={styles.themeToggle}\n              checked={isDark}\n              onChange={(isChecked) =>\n                setTimeout(() => {\n                  switchTheme(isChecked ? \"dark\" : \"light\");\n                }, 500)\n              }\n            />\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}